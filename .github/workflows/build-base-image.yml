name: Base Image CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Bandit (Static Code Analysis)
        run: |
          pip install bandit
          bandit -r . -f json -o bandit_results.json
        continue-on-error: true  # Permite que el job continúe incluso si Bandit encuentra problemas

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit_results.json

      - name: Run Safety (Dependency Scanning)
        run: |
          pip install safety
          safety check --full-report --output safety_report.txt
        continue-on-error: true  # Permite que el job continúe incluso si Safety encuentra problemas

      - name: Upload Safety Report
        uses: actions/upload-artifact@v3
        with:
          name: safety-report
          path: safety_report.txt

      - name: Scan for secrets with Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
          fail-on-error: true  # Falla si se detectan secretos

  container-scan:
    runs-on: ubuntu-latest
    needs: security-checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t base-image:latest -f Dockerfile .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'base-image:latest'
          exit-code: 1
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: Push Docker image (if on main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag base-image:latest ${{ secrets.DOCKER_HUB_USERNAME }}/base-image:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/base-image:latest